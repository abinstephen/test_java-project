name: Maven Release

on: workflow_dispatch

jobs:
  build_and_release:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 14
      uses: actions/setup-java@v1
      with:
        java-version: 14
        
    - name: Configure Git user
      run: |
        mvn help:effective-settings
        git config user.email "abinstephen@gmail.com"
        git config user.name "abinstephen"
       
    #- name: maven-settings-xml-action
     # uses: whelk-io/maven-settings-xml-action@v20
     # with:
      #  repositories: '[{ "id": "some-repository", "url": "http://some.repository.url" }]'
      #  plugin_repositories: '[{ "id": "some-plugin-repository", "url": "http://some.plugin.repository.url" }]'
      # servers: '[{ "id": "some-server", "username": "some.user", "password": "some.password" }]' 
      
    - name: maven-settings-xml-action
      uses: whelk-io/maven-settings-xml-action@v20
      with:
        repositories: >
          [
            {
              "id": "some-repository",
              "name": "some-repository-name",
              "url": "http://some.repository.url",
              "releases": {
                 "enabled": "true",
                "updatePolicy": "always",
                "checksumPolicy": "fail"
              },
              "snapshots": {
                "enabled": "false",
                "updatePolicy": "always",
                "checksumPolicy": "fail"
              }
            }
          ]
        servers: >
          [
            {
              "id": "central",
              "username": "${env.USER}",
              "password": "${env.PASS}",
              "configuration": {
              "httpConfiguration": {
                 "all": {
                   "usePreemptive": "true"
                 }
               }
             }
           }
          ]
        profiles: >
          [
            {
              "id": "foo.profile",
              "name": "foo.profile",
              "url": "http://foo.bar.profile",
              "properties": {
                "foo": "property-1",
                "bar": "property-2"
              }
            }
          ]
        active_profiles: >
          [
          "artifactory"
          ]
        output_file:  .m2/settings.xml
    
    - name: buildRelease
      #env:
        #GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        #MAVEN_SETTINGS: ${{ secrets.MAVEN_SETTINGS }}
      #run: mvn   clean release:clean release:prepare release:perform -Dmaven.test.skip=true --batch-mode --update-snapshots --no-transfer-progress --settings /home/runner/work/test_java-project/test_java-project/.m2/settings.xml
      run: mvn   clean release:clean release:prepare release:perform -Dmaven.test.skip=true --batch-mode --update-snapshots --no-transfer-progress  -Dinternal.repo.pw=cmVmdGtuOjAxOjE3MDgwMjUyOTc6cDJLdktZenFnOFZ3dEhpQWRFWU5BV0RNYXlC --settings /home/runner/work/test_java-project/test_java-project/settings.xml

    - name: maven settings check
      run: mvn help:effective-settings
      
    - name: Run script file
      run: |
         cat /home/runner/work/test_java-project/test_java-project/settings.xml
         docker -v
      shell: bash
    
